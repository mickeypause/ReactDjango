[{"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/index.js":"1","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/App.js":"2","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/components/nav/Nav.js":"3","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/components/nav/Search.js":"4","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/components/nav/RightBlock.js":"5","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/redux/Store.js":"6","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/homePage/HomePage.js":"7","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/homePage/Discussions.js":"8","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/detailDiscussionPage/DetailDiscussionPage.js":"9","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/addDiscussionPage/addDiscussionPage.js":"10","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/addDiscussionPage/AddDiscussionPage.js":"11","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/redux/DiscussionSlice.js":"12","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/detailDiscussionPage/EditDiscusssion.js":"13"},{"size":403,"mtime":1674459105377,"results":"14","hashOfConfig":"15"},{"size":1313,"mtime":1674633601443,"results":"16","hashOfConfig":"15"},{"size":886,"mtime":1674633601452,"results":"17","hashOfConfig":"15"},{"size":2524,"mtime":1674633601473,"results":"18","hashOfConfig":"15"},{"size":640,"mtime":1674633601458,"results":"19","hashOfConfig":"15"},{"size":193,"mtime":1674633601537,"results":"20","hashOfConfig":"15"},{"size":387,"mtime":1674633601526,"results":"21","hashOfConfig":"15"},{"size":2435,"mtime":1674926748032,"results":"22","hashOfConfig":"15"},{"size":3389,"mtime":1674633784525,"results":"23","hashOfConfig":"15"},{"size":956,"mtime":1674572977432,"results":"24","hashOfConfig":"15"},{"size":2999,"mtime":1674633724172,"results":"25","hashOfConfig":"15"},{"size":471,"mtime":1674633601533,"results":"26","hashOfConfig":"15"},{"size":3397,"mtime":1674633601512,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1a6ivm7",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"31"},"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/index.js",[],[],[],"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/App.js",[],[],"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/components/nav/Nav.js",[],[],"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/components/nav/Search.js",[],[],"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/components/nav/RightBlock.js",[],[],"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/redux/Store.js",[],[],"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/homePage/HomePage.js",["71"],[],"import { Flex, Text } from '@chakra-ui/react'\nimport Discussions from './Discussions'\n\nexport default function HomePage() {\n    return (\n        <Flex alignSelf={'center'} justify={'center'} marginTop={'30px'} paddingBottom={'20px'}>\n            <Flex width={'55%'} justify={'center'} flexDirection={'column'}>\n                <Discussions />\n            </Flex>\n        </Flex>\n    )\n}\n","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/homePage/Discussions.js",["72"],[],"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/detailDiscussionPage/DetailDiscussionPage.js",["73"],[],"import { Button, Flex, Text } from '@chakra-ui/react'\nimport { useParams } from 'react-router-dom'\n\nimport Moment from 'react-moment'\nimport axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { editing } from '../../redux/DiscussionSlice'\nimport { useNavigate } from 'react-router-dom'\nimport EditDiscussionPage from './EditDiscusssion'\nexport default function DetailDiscussionPage() {\n    const discussionStatus = useSelector((state) => state.discussion.status)\n    const dispatch = useDispatch()\n    const { id } = useParams()\n    const navigate = useNavigate()\n\n    const [discussion, setDiscussion] = useState({})\n\n    async function fetchDiscussion() {\n        const response = await axios.get(`http://localhost:8000/api/discussions/${id}`)\n        setDiscussion(response.data)\n    }\n    useEffect(() => {\n        fetchDiscussion()\n    }, [])\n\n    if (discussionStatus !== 'reading') {\n        if (discussion) {\n            console.log(discussion)\n        }\n        return <EditDiscussionPage discussion={discussion} />\n    }\n    return (\n        <Flex alignSelf={'center'} justify={'center'} marginTop={'90px'} paddingBottom={'20px'}>\n            <Flex\n                width={'50%'}\n                justify={'center'}\n                flexDirection={'column'}\n                bg={'white'}\n                padding={'10px'}\n            >\n                <Flex flexDirection={'column'}>\n                    <Flex>\n                        <Text>Posted &nbsp;</Text>\n                        <Moment fromNow>{discussion && discussion.created_at}</Moment>\n                    </Flex>\n                    <Text fontWeight={'600'} fontSize={'30px'}>\n                        {discussion && discussion.title}\n                    </Text>\n                    <Text>{discussion && discussion.description}</Text>\n                    <Flex justify={'center'} align={'center'} marginTop={'20px'}>\n                        <Button\n                            width={'70px'}\n                            marginRight={'20px'}\n                            bg={'red.500'}\n                            color={'white'}\n                            _hover={{ bg: 'red.400' }}\n                            onClick={() => {\n                                try {\n                                    axios({\n                                        method: 'DELETE',\n                                        url: `http://127.0.0.1:8000/api/discussions/${id}`,\n                                    })\n                                } catch (error) {\n                                    console.info(error)\n                                }\n                                navigate('/')\n                            }}\n                        >\n                            Delete\n                        </Button>\n                        <Button\n                            width={'70px'}\n                            bg={'blue.300'}\n                            color={'white'}\n                            _hover={{ bg: 'blue.200' }}\n                            onClick={() => {\n                                dispatch(editing())\n                            }}\n                        >\n                            Edit\n                        </Button>\n                    </Flex>\n                </Flex>\n            </Flex>\n        </Flex>\n    )\n}\n","/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/addDiscussionPage/addDiscussionPage.js",[],[],"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/addDiscussionPage/AddDiscussionPage.js",[],[],"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/redux/DiscussionSlice.js",[],[],"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/detailDiscussionPage/EditDiscusssion.js",["74","75","76","77"],[],"import { Flex, Text, Input, Textarea, Select, Button } from '@chakra-ui/react'\nimport axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { reading } from '../../redux/DiscussionSlice'\nexport default function EditDiscussionPage({ discussion }) {\n    const [title, setTitle] = useState(discussion.title)\n    const [description, setDiscription] = useState(discussion.description)\n    const [topic, setTopic] = useState(discussion.topic)\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    return (\n        <Flex alignSelf={'center'} justify={'center'} marginTop={'90px'} paddingBottom={'20px'}>\n            <Flex\n                width={'50%'}\n                justify={'center'}\n                flexDirection={'column'}\n                bg={'white'}\n                padding={'10px'}\n            >\n                <Flex flexDirection={'column'}>\n                    <Textarea\n                        placeholder={'Title'}\n                        defaultValue={title}\n                        marginBottom={'20px'}\n                        resize={'none'}\n                        maxLength={255}\n                        onChange={(event) => {\n                            setTitle(event.target.value)\n                        }}\n                    />\n                    <Textarea\n                        placeholder='Write Something'\n                        minHeight={'200px'}\n                        marginBottom={'20px'}\n                        defaultValue={description}\n                        onChange={(event) => {\n                            setDiscription(event.target.value)\n                        }}\n                    />\n                    <Select\n                        placeholder='Select Topic'\n                        marginBottom={'20px'}\n                        value={topic}\n                        onChange={(event) => setTopic(event.target.value)}\n                    >\n                        <option value={1}>Crypto</option>\n                        <option value={3}>IT</option>\n                        <option value={2}>News</option>\n                    </Select>\n                    <Button\n                        onClick={() => {\n                            if (title !== '' && description !== '' && topic !== '') {\n                                try {\n                                    const request = axios({\n                                        method: 'PUT',\n                                        url: `http://127.0.0.1:8000/api/discussions/${discussion.id}/`,\n                                        data: {\n                                            title: title,\n                                            description: description,\n                                            topic: topic,\n                                        },\n                                    })\n                                } catch (error) {\n                                    console.info(error)\n                                }\n                                dispatch(reading())\n                                navigate('/')\n                            }\n                        }}\n                    >\n                        Confirm Editing\n                    </Button>\n                </Flex>\n            </Flex>\n        </Flex>\n    )\n}\n",{"ruleId":"78","severity":1,"message":"79","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":20},{"ruleId":"78","severity":1,"message":"82","line":1,"column":22,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":25,"column":8,"nodeType":"85","endLine":25,"endColumn":10,"suggestions":"86"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":20},{"ruleId":"78","severity":1,"message":"87","line":1,"column":22,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},{"ruleId":"78","severity":1,"message":"88","line":3,"column":20,"nodeType":"80","messageId":"81","endLine":3,"endColumn":29},{"ruleId":"78","severity":1,"message":"89","line":56,"column":43,"nodeType":"80","messageId":"81","endLine":56,"endColumn":50},"no-unused-vars","'Text' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDiscussion'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'Input' is defined but never used.","'useEffect' is defined but never used.","'request' is assigned a value but never used.",{"desc":"91","fix":"92"},"Update the dependencies array to be: [fetchDiscussion]",{"range":"93","text":"94"},[918,920],"[fetchDiscussion]"]