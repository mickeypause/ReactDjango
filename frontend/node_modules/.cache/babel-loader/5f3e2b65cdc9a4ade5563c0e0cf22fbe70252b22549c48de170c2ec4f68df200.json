{"ast":null,"code":"var _jsxFileName = \"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/homePage/Topics.js\",\n  _s = $RefreshSig$();\nimport { Flex, Text, Image } from '@chakra-ui/react';\nimport { Route, Routes, useN } from 'react-router-dom';\nimport DetailTopic from '../detailTopicPage/DetailTopicPage';\nimport axios from 'axios';\nimport { useQuery } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Topics() {\n  _s();\n  async function fetchTopics() {\n    const response = await axios.get('http://localhost:8000/api/topics');\n    const topics = response.data;\n    return topics;\n  }\n  const {\n    status,\n    error,\n    data: topics\n  } = useQuery({\n    queryKey: ['topics'],\n    queryFn: fetchTopics\n  });\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: 'column',\n    justify: \"center\",\n    align: 'center',\n    padding: '2%',\n    width: '100%',\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontWeight: '600',\n      fontSize: '32px',\n      children: \"Topics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: topics && topics.map(topic => {\n        return /*#__PURE__*/_jsxDEV(Flex, {\n          align: 'center',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          flexDirection: 'column',\n          width: '200px',\n          height: '100px',\n          backgroundColor: 'blue.300',\n          borderRadius: 10,\n          marginRight: '2%',\n          _hover: {\n            bg: 'blue.100'\n          },\n          cursor: 'pointer',\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            color: 'white',\n            fontWeight: '600',\n            fontSize: 20,\n            children: topic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this)\n        }, topic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/topics/:id\",\n        render: _ref => {\n          let {\n            match\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(DetailTopic, {\n            topic: topics.find(topic => String(topic.id) === match.params.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 14\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Topics, \"lbUO52s0l86QP3gSreVbH8rKKaw=\", false, function () {\n  return [useQuery];\n});\n_c = Topics;\nvar _c;\n$RefreshReg$(_c, \"Topics\");","map":{"version":3,"names":["Flex","Text","Image","Route","Routes","useN","DetailTopic","axios","useQuery","Topics","fetchTopics","response","get","topics","data","status","error","queryKey","queryFn","map","topic","bg","name","id","match","find","String","params"],"sources":["/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/homePage/Topics.js"],"sourcesContent":["import { Flex, Text, Image } from '@chakra-ui/react'\nimport {Route, Routes, useN} from 'react-router-dom'\nimport DetailTopic from '../detailTopicPage/DetailTopicPage'\nimport axios from 'axios'\nimport { useQuery } from '@tanstack/react-query'\nexport default function Topics() {\n    async function fetchTopics() {\n        const response = await axios.get('http://localhost:8000/api/topics')\n        const topics = response.data\n        return topics\n    }\n\n    const {\n        status,\n        error,\n        data: topics,\n    } = useQuery({\n        queryKey: ['topics'],\n        queryFn: fetchTopics,\n    })\n\n    return (\n        <Flex\n            flexDirection={'column'}\n            justify='center'\n            align={'center'}\n            padding={'2%'}\n            width={'100%'}>\n            <Text fontWeight={'600'} fontSize={'32px'}>\n                Topics\n            </Text>\n            <Flex>\n                {topics &&\n                    topics.map((topic) => {\n                        return (\n                            <Flex\n                                key={topic.id}\n                                align={'center'}\n                                justifyContent={'center'}\n                                flexWrap={'wrap'}\n                                flexDirection={'column'}\n                                width={'200px'}\n                                height={'100px'}\n                                backgroundColor={'blue.300'}\n                                borderRadius={10}\n                                marginRight={'2%'}\n                                _hover={{ bg: 'blue.100' }}\n                                cursor={'pointer'}>\n                                <Text\n                                    color={'white'}\n                                    fontWeight={'600'}\n                                    fontSize={20}>\n                                    {topic.name}\n                                </Text>\n                            </Flex>\n                        )\n                    })}\n            </Flex>\n            <Routes>\n         <Route\n           path=\"/topics/:id\"\n           render={({ match }) => (\n             <DetailTopic\n               topic={topics.find(\n                 (topic) => String(topic.id) === match.params.id\n               )}\n             />\n           )}\n         />\n       </Routes>\n        </Flex>\n         \n    )\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,KAAK,QAAQ,kBAAkB;AACpD,SAAQC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAO,kBAAkB;AACpD,OAAOC,WAAW,MAAM,oCAAoC;AAC5D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,uBAAuB;AAAA;AAChD,eAAe,SAASC,MAAM,GAAG;EAAA;EAC7B,eAAeC,WAAW,GAAG;IACzB,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,kCAAkC,CAAC;IACpE,MAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAI;IAC5B,OAAOD,MAAM;EACjB;EAEA,MAAM;IACFE,MAAM;IACNC,KAAK;IACLF,IAAI,EAAED;EACV,CAAC,GAAGL,QAAQ,CAAC;IACTS,QAAQ,EAAE,CAAC,QAAQ,CAAC;IACpBC,OAAO,EAAER;EACb,CAAC,CAAC;EAEF,oBACI,QAAC,IAAI;IACD,aAAa,EAAE,QAAS;IACxB,OAAO,EAAC,QAAQ;IAChB,KAAK,EAAE,QAAS;IAChB,OAAO,EAAE,IAAK;IACd,KAAK,EAAE,MAAO;IAAA,wBACd,QAAC,IAAI;MAAC,UAAU,EAAE,KAAM;MAAC,QAAQ,EAAE,MAAO;MAAA,UAAC;IAE3C;MAAA;MAAA;MAAA;IAAA,QAAO,eACP,QAAC,IAAI;MAAA,UACAG,MAAM,IACHA,MAAM,CAACM,GAAG,CAAEC,KAAK,IAAK;QAClB,oBACI,QAAC,IAAI;UAED,KAAK,EAAE,QAAS;UAChB,cAAc,EAAE,QAAS;UACzB,QAAQ,EAAE,MAAO;UACjB,aAAa,EAAE,QAAS;UACxB,KAAK,EAAE,OAAQ;UACf,MAAM,EAAE,OAAQ;UAChB,eAAe,EAAE,UAAW;UAC5B,YAAY,EAAE,EAAG;UACjB,WAAW,EAAE,IAAK;UAClB,MAAM,EAAE;YAAEC,EAAE,EAAE;UAAW,CAAE;UAC3B,MAAM,EAAE,SAAU;UAAA,uBAClB,QAAC,IAAI;YACD,KAAK,EAAE,OAAQ;YACf,UAAU,EAAE,KAAM;YAClB,QAAQ,EAAE,EAAG;YAAA,UACZD,KAAK,CAACE;UAAI;YAAA;YAAA;YAAA;UAAA;QACR,GAjBFF,KAAK,CAACG,EAAE;UAAA;UAAA;UAAA;QAAA,QAkBV;MAEf,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACH,eACP,QAAC,MAAM;MAAA,uBACV,QAAC,KAAK;QACJ,IAAI,EAAC,aAAa;QAClB,MAAM,EAAE;UAAA,IAAC;YAAEC;UAAM,CAAC;UAAA,oBAChB,QAAC,WAAW;YACV,KAAK,EAAEX,MAAM,CAACY,IAAI,CACfL,KAAK,IAAKM,MAAM,CAACN,KAAK,CAACG,EAAE,CAAC,KAAKC,KAAK,CAACG,MAAM,CAACJ,EAAE;UAC/C;YAAA;YAAA;YAAA;UAAA,QACF;QAAA;MACF;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACK;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAGf;AAAC,GApEuBd,MAAM;EAAA,QAWtBD,QAAQ;AAAA;AAAA,KAXQC,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}