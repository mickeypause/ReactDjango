{"ast":null,"code":"var _jsxFileName = \"/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/homePage/Discussions.js\",\n  _s = $RefreshSig$();\nimport { Flex, Text, Image } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { useQuery } from '@tanstack/react-query';\nimport { useNavigate } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Discussions() {\n  _s();\n  async function fetchDiscussions() {\n    const response = await axios.get('http://localhost:8000/api/discussions');\n    const discussions = response.data;\n    return discussions;\n  }\n  const {\n    status,\n    error,\n    data: discussions\n  } = useQuery({\n    queryKey: ['discussions'],\n    queryFn: fetchDiscussions\n  });\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: \"All Discussions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), discussions && discussions.map(discussion => {\n      return /*#__PURE__*/_jsxDEV(Flex, {\n        cursor: 'pointer',\n        _hover: {\n          border: '0.6px solid gray'\n        },\n        border: '0.6px solid transparent',\n        bg: 'white',\n        marginTop: '20px',\n        borderRadius: 5,\n        padding: \"10px\",\n        flexDirection: 'column',\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          align: 'center',\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: '600',\n            width: '10%',\n            children: discussion.topic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            flexDirection: 'column',\n            width: '90%',\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              fontSize: 10,\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: [\"Posted by \", discussion.author, \" \\xA0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Moment, {\n                fromNow: true,\n                children: discussion.created_at\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: discussion.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)\n      }, discussion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Discussions, \"APVxojh6L/jYSPFpdFMJ/8FGuSw=\", false, function () {\n  return [useQuery];\n});\n_c = Discussions;\nvar _c;\n$RefreshReg$(_c, \"Discussions\");","map":{"version":3,"names":["Flex","Text","Image","axios","useQuery","useNavigate","Moment","Discussions","fetchDiscussions","response","get","discussions","data","status","error","queryKey","queryFn","map","discussion","border","topic","author","created_at","title","id"],"sources":["/Users/serhiifozykosh/Developer/ReactProject/frontend/src/pages/homePage/Discussions.js"],"sourcesContent":["import { Flex, Text, Image } from '@chakra-ui/react'\nimport axios from 'axios'\nimport { useQuery } from '@tanstack/react-query'\nimport {useNavigate} from 'react-router-dom'\nimport Moment from 'react-moment'\nexport default function Discussions() {\n    async function fetchDiscussions() {\n        const response = await axios.get(\n            'http://localhost:8000/api/discussions'\n        )\n        const discussions = response.data\n        return discussions\n    }\n\n    const {\n        status,\n        error,\n        data: discussions,\n    } = useQuery({\n        queryKey: ['discussions'],\n        queryFn: fetchDiscussions,\n    })\n    return (\n        <Flex flexDirection='column'>\n            <Text>All Discussions</Text>\n            {discussions &&\n                discussions.map((discussion) => {\n                    return (\n                        <Flex cursor={'pointer'} key={discussion.id}\n                            _hover={{ border: '0.6px solid gray' }}\n                            border={'0.6px solid transparent'}\n                            bg={'white'}\n                            marginTop={'20px'}\n                            borderRadius={5}\n                            padding='10px'\n                            flexDirection={'column'}>\n                            <Flex align={'center'}>\n                                <Text fontWeight={'600'} width={'10%'}>\n                                    {discussion.topic}\n                                </Text>\n                                \n                                <Flex flexDirection={'column'} width={'90%'}>\n                                    <Flex fontSize={10}>\n                                        <Text>\n                                            Posted by {discussion.author} &nbsp;\n                                        </Text>\n                                        <Moment fromNow>\n                                            {discussion.created_at}\n                                        </Moment>\n                                    </Flex>\n\n                                    <Text>{discussion.title}</Text>\n                                </Flex>\n                            </Flex>\n                        </Flex>\n                    )\n                })}\n        </Flex>\n    )\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,KAAK,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,cAAc;AAAA;AACjC,eAAe,SAASC,WAAW,GAAG;EAAA;EAClC,eAAeC,gBAAgB,GAAG;IAC9B,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAC5B,uCAAuC,CAC1C;IACD,MAAMC,WAAW,GAAGF,QAAQ,CAACG,IAAI;IACjC,OAAOD,WAAW;EACtB;EAEA,MAAM;IACFE,MAAM;IACNC,KAAK;IACLF,IAAI,EAAED;EACV,CAAC,GAAGP,QAAQ,CAAC;IACTW,QAAQ,EAAE,CAAC,aAAa,CAAC;IACzBC,OAAO,EAAER;EACb,CAAC,CAAC;EACF,oBACI,QAAC,IAAI;IAAC,aAAa,EAAC,QAAQ;IAAA,wBACxB,QAAC,IAAI;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAO,EAC3BG,WAAW,IACRA,WAAW,CAACM,GAAG,CAAEC,UAAU,IAAK;MAC5B,oBACI,QAAC,IAAI;QAAC,MAAM,EAAE,SAAU;QACpB,MAAM,EAAE;UAAEC,MAAM,EAAE;QAAmB,CAAE;QACvC,MAAM,EAAE,yBAA0B;QAClC,EAAE,EAAE,OAAQ;QACZ,SAAS,EAAE,MAAO;QAClB,YAAY,EAAE,CAAE;QAChB,OAAO,EAAC,MAAM;QACd,aAAa,EAAE,QAAS;QAAA,uBACxB,QAAC,IAAI;UAAC,KAAK,EAAE,QAAS;UAAA,wBAClB,QAAC,IAAI;YAAC,UAAU,EAAE,KAAM;YAAC,KAAK,EAAE,KAAM;YAAA,UACjCD,UAAU,CAACE;UAAK;YAAA;YAAA;YAAA;UAAA,QACd,eAEP,QAAC,IAAI;YAAC,aAAa,EAAE,QAAS;YAAC,KAAK,EAAE,KAAM;YAAA,wBACxC,QAAC,IAAI;cAAC,QAAQ,EAAE,EAAG;cAAA,wBACf,QAAC,IAAI;gBAAA,WAAC,YACQ,EAACF,UAAU,CAACG,MAAM,EAAC,OACjC;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAO,eACP,QAAC,MAAM;gBAAC,OAAO;gBAAA,UACVH,UAAU,CAACI;cAAU;gBAAA;gBAAA;gBAAA;cAAA,QACjB;YAAA;cAAA;cAAA;cAAA;YAAA,QACN,eAEP,QAAC,IAAI;cAAA,UAAEJ,UAAU,CAACK;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAC5B;QAAA;UAAA;UAAA;UAAA;QAAA;MACJ,GAzBmBL,UAAU,CAACM,EAAE;QAAA;QAAA;QAAA;MAAA,QA0BpC;IAEf,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEf;AAAC,GAtDuBjB,WAAW;EAAA,QAa3BH,QAAQ;AAAA;AAAA,KAbQG,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}